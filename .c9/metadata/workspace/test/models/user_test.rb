{"changed":true,"filter":false,"title":"user_test.rb","tooltip":"/test/models/user_test.rb","value":"require 'test_helper'\n\nclass UserTest < ActiveSupport::TestCase\n\n  def setup\n    @user = User.new(name: \"Example User\", email: \"user@example.com\",\n     password: \"foobar\", password_confirmation: \"foobar\")\n  end\n\n  test \"should be valid\" do\n    assert @user.valid?\n  end\n  test \"name should be present\" do\n    @user.name = \"     \"\n    assert_not @user.valid?\n  end\n  test \"email should be present\" do\n    @user.email = \"     \"\n    assert_not @user.valid?\n  end\n  \n    test \"name should not be too long\" do\n    @user.name = \"a\" * 51\n    assert_not @user.valid?\n  end\n\n  test \"email should not be too long\" do\n    @user.email = \"a\" * 256\n    assert_not @user.valid?\n  end\n    test \"email validation should accept valid addresses\" do\n    valid_addresses = %w[user@example.com USER@foo.COM A_US-ER@foo.bar.org\n                         first.last@foo.jp alice+bob@baz.cn]\n    valid_addresses.each do |valid_address|\n      @user.email = valid_address\n      assert @user.valid?, \"#{valid_address.inspect} should be valid\"\n    end\n      test \"email validation should reject invalid addresses\" do\n    invalid_addresses = %w[user@example,com user_at_foo.org user.name@example.\n                           foo@bar_baz.com foo@bar+baz.com]\n    invalid_addresses.each do |invalid_address|\n      @user.email = invalid_address\n      assert_not @user.valid?, \"#{invalid_address.inspect} should be invalid\"\n    end\n  test \"email addresses should be unique\" do\n    duplicate_user = @user.dup\n    duplicate_user.email = @user.email.upcase\n    @user.save\n    assert_not duplicate_user.valid?\n  end\n    test \"password should have a minimum length\" do\n    @user.password = @user.password_confirmation = \"a\" * 5\n    assert_not @user.valid?\n  end\nend","undoManager":{"mark":23,"position":35,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":1,"column":0},"end":{"row":1,"column":21}},"text":"require 'test_helper'"},{"action":"insertText","range":{"start":{"row":1,"column":21},"end":{"row":2,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":2,"column":0},"end":{"row":12,"column":0}},"lines":["","class UserTest < ActiveSupport::TestCase","","  def setup","    @user = User.new(name: \"Example User\", email: \"user@example.com\")","  end","","  test \"should be valid\" do","    assert @user.valid?","  end"]},{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":3}},"text":"end"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":1,"column":0},"end":{"row":1,"column":21}},"text":"require 'test_helper'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":0,"column":21},"end":{"row":1,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":12,"column":0},"end":{"row":17,"column":0}},"nl":"\n","lines":["class UserTest < ActiveSupport::TestCase","  # test \"the truth\" do","  #   assert true","  # end","end"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":3},"end":{"row":12,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":3}},"text":"end"},{"action":"insertText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":34}},"text":"  test \"name should be present\" do"},{"action":"insertText","range":{"start":{"row":11,"column":34},"end":{"row":12,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":12,"column":0},"end":{"row":15,"column":0}},"lines":["    @user.name = \"     \"","    assert_not @user.valid?","  end"]},{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":3}},"text":"end"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":3}},"text":"end"},{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":35}},"text":"  test \"email should be present\" do"},{"action":"insertText","range":{"start":{"row":15,"column":35},"end":{"row":16,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":16,"column":0},"end":{"row":19,"column":0}},"lines":["    @user.email = \"     \"","    assert_not @user.valid?","  end"]},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":3}},"text":"end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":5},"end":{"row":19,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":2},"end":{"row":20,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":20,"column":0},"end":{"row":20,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":20,"column":2},"end":{"row":20,"column":41}},"text":"  test \"name should not be too long\" do"},{"action":"insertText","range":{"start":{"row":20,"column":41},"end":{"row":21,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":21,"column":0},"end":{"row":28,"column":0}},"lines":["    @user.name = \"a\" * 51","    assert_not @user.valid?","  end","","  test \"email should not be too long\" do","    @user.email = \"a\" * 256","    assert_not @user.valid?"]},{"action":"insertText","range":{"start":{"row":28,"column":0},"end":{"row":28,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":5},"end":{"row":29,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":29,"column":0},"end":{"row":29,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":29,"column":2},"end":{"row":29,"column":60}},"text":"  test \"email validation should accept valid addresses\" do"},{"action":"insertText","range":{"start":{"row":29,"column":60},"end":{"row":30,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":30,"column":0},"end":{"row":36,"column":0}},"lines":["    valid_addresses = %w[user@example.com USER@foo.COM A_US-ER@foo.bar.org","                         first.last@foo.jp alice+bob@baz.cn]","    valid_addresses.each do |valid_address|","      @user.email = valid_address","      assert @user.valid?, \"#{valid_address.inspect} should be valid\"","    end"]},{"action":"insertText","range":{"start":{"row":36,"column":0},"end":{"row":36,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":7},"end":{"row":36,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":36,"column":0},"end":{"row":36,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":4},"end":{"row":36,"column":64}},"text":"  test \"email validation should reject invalid addresses\" do"},{"action":"insertText","range":{"start":{"row":36,"column":64},"end":{"row":37,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":37,"column":0},"end":{"row":43,"column":0}},"lines":["    invalid_addresses = %w[user@example,com user_at_foo.org user.name@example.","                           foo@bar_baz.com foo@bar+baz.com]","    invalid_addresses.each do |invalid_address|","      @user.email = invalid_address","      assert_not @user.valid?, \"#{invalid_address.inspect} should be invalid\"","    end"]},{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":7},"end":{"row":43,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":4},"end":{"row":43,"column":48}},"text":"  test \"email addresses should be unique\" do"},{"action":"insertText","range":{"start":{"row":43,"column":48},"end":{"row":44,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":44,"column":0},"end":{"row":47,"column":0}},"lines":["    duplicate_user = @user.dup","    @user.save","    assert_not duplicate_user.valid?"]},{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":0},"end":{"row":48,"column":5}},"text":"  end"},{"action":"removeLines","range":{"start":{"row":47,"column":0},"end":{"row":48,"column":0}},"nl":"\n","lines":["  end"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":48,"column":0},"end":{"row":48,"column":5}},"text":"  end"},{"action":"removeLines","range":{"start":{"row":43,"column":0},"end":{"row":48,"column":0}},"nl":"\n","lines":["      test \"email addresses should be unique\" do","    duplicate_user = @user.dup","    @user.save","    assert_not duplicate_user.valid?",""]},{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":44}},"text":"  test \"email addresses should be unique\" do"},{"action":"insertText","range":{"start":{"row":43,"column":44},"end":{"row":44,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":44,"column":0},"end":{"row":48,"column":0}},"lines":["    duplicate_user = @user.dup","    duplicate_user.email = @user.email.upcase","    @user.save","    assert_not duplicate_user.valid?"]},{"action":"insertText","range":{"start":{"row":48,"column":0},"end":{"row":48,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":69},"end":{"row":6,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":4},"end":{"row":6,"column":57}},"text":" password: \"foobar\", password_confirmation: \"foobar\")"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":68},"end":{"row":5,"column":69}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":68},"end":{"row":5,"column":69}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":49,"column":5},"end":{"row":50,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":50,"column":0},"end":{"row":50,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":2},"end":{"row":50,"column":51}},"text":"  test \"password should have a minimum length\" do"},{"action":"insertText","range":{"start":{"row":50,"column":51},"end":{"row":51,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":51,"column":0},"end":{"row":53,"column":0}},"lines":["    @user.password = @user.password_confirmation = \"a\" * 5","    assert_not @user.valid?"]},{"action":"insertText","range":{"start":{"row":53,"column":0},"end":{"row":53,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":5},"end":{"row":54,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":54,"column":0},"end":{"row":54,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":2},"end":{"row":54,"column":3}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":3},"end":{"row":54,"column":4}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":4},"end":{"row":54,"column":5}},"text":"d"},{"action":"removeText","range":{"start":{"row":54,"column":0},"end":{"row":54,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":3},"end":{"row":55,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":3},"end":{"row":54,"column":4}},"text":"\\"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":3},"end":{"row":54,"column":4}},"text":"\\"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":54,"column":3},"end":{"row":55,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":2},"end":{"row":54,"column":3}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":1},"end":{"row":54,"column":2}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":0},"end":{"row":54,"column":1}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":5},"end":{"row":54,"column":0}},"text":"\n"}]}]]},"ace":{"folds":[],"scrolltop":106.5,"scrollleft":0,"selection":{"start":{"row":54,"column":3},"end":{"row":54,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":6,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1416518979191}